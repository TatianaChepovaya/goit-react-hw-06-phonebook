{"version":3,"sources":["components/ContactsList/ContactsList.module.css","components/Section/Section.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","redux/actions.js","components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.js","components/Section/Section.js","components/Filter/Filter.js","components/Container/Container.js","App.js","redux/reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","ContactForm","useState","setName","setNumber","dispatch","useDispatch","handleChange","e","currentTarget","value","reset","onSubmit","preventDefault","className","s","form","label","input","type","onChange","pattern","title","required","btn","style","marginLeft","width","height","ContactsList","contacts","useSelector","state","items","normalizeFilter","filter","toLowerCase","item","includes","getFilteredContacts","list","map","onClick","onDeleteContact","Section","children","section","Filter","target","placeholder","Container","container","App","createReducer","actions","find","toast","error","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.155c2a22.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactsList_item__1WTPv\",\"btn\":\"ContactsList_btn__2oroZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2sR8x\",\"title\":\"Section_title__3HD_H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2CbQH\",\"input\":\"Filter_input__2VXlU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1pAXq\"};","\r\nimport shortid from 'shortid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContact = createAction('contacts/add', ({ name, number }) => ({\r\n      payload: {\r\n        id: shortid.generate(),\r\n      name,\r\n      number,\r\n        }\r\n}))\r\n\r\nexport const deleteContact = createAction('contacts/delete');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport s from './ContactForm.module.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addContact } from '../../redux/actions';\r\nimport { TiTickOutline } from 'react-icons/ti';\r\n\r\nfunction ContactForm() {\r\n  \r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n \r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    dispatch(addContact({ name, number }));\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n \r\n    return (\r\n      <form onSubmit={handleSubmit} className={s.form}>\r\n        <label className={s.label}>\r\n          Name\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={handleChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Phone\r\n          <input\r\n            className={s.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={handleChange}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\" className={s.btn}>\r\n          Add contact\r\n          <TiTickOutline style={{\r\n            marginLeft: 10, width: 25, height: 25\r\n          }} />\r\n        </button>\r\n      </form>\r\n    )\r\n\r\n}\r\n\r\nexport default ContactForm;\r\n","\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport React from 'react';\r\nimport s from './ContactsList.module.css';\r\nimport { deleteContact } from 'redux/actions';\r\nimport { TiDeleteOutline } from \"react-icons/ti\";\r\n\r\nconst ContactsList = () => {\r\n\r\n  const getFilteredContacts = (state) => {\r\n    const { items, filter } = state.contacts;\r\n     const normalizeFilter = filter.toLowerCase();\r\n    return items.filter(item =>\r\n      item.name.toLowerCase().includes(normalizeFilter),\r\n    );\r\n  }\r\n\r\n  const contacts = useSelector(state => getFilteredContacts(state));\r\n  const dispatch = useDispatch();\r\n\r\n  const onDeleteContact = id => dispatch(deleteContact(id));\r\n\r\n  \r\n\r\n\r\n  return (\r\n    <ul className={ s.list}>\r\n      {contacts.map(({ name, number, id }) => (\r\n        <li key={id} className={s.item}>\r\n          <span>{name} </span><span>{number}</span>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => onDeleteContact(id)}\r\n            className={s.btn}\r\n          >\r\n            Delete\r\n            <TiDeleteOutline style={{ marginLeft: 5, width: 15, height: 15}}/>\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\n\r\nexport default ContactsList;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport s from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={s.section}>\r\n      {title && <h2 className={s.title}>{title}</h2>}\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n}\r\n\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport s from './Filter.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { changeFilter } from 'redux/actions';\r\n \r\nconst Filter = () => {\r\n  const value = useSelector(state => state.contacts.filter);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name: \r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={e => dispatch(changeFilter(e.target.value))}\r\n        className={s.input}\r\n        placeholder=\"Fiona Holmse\"  \r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Container.module.css\";\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Container;","//import  { useState } from 'react';\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"./App.css\";\r\nimport ContactForm from \"./components/ContactForm\";\r\nimport ContactsList from \"./components/ContactsList\";\r\nimport Section from \"./components/Section\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Filter from \"./components/Filter\";\r\nimport Container from \"components/Container\";\r\n\r\nfunction App() {\r\n  const contacts = useSelector((state) => state.contacts.items);\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Section title=\"Phonebook\">\r\n          <ContactForm />\r\n        </Section>\r\n        <Section title=\"Contacts\">\r\n          <Filter />\r\n          {contacts && <ContactsList />}\r\n        </Section>\r\n      </Container>\r\n\r\n      <ToastContainer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import * as actions from './actions';\r\nimport { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\n\r\nconst addContactReducer = (state, { payload}) => {\r\n    if (state.find(item => item.name === payload.name)) {\r\n        toast.error(`${payload.name} is already in contacts`);\r\n        return state;\r\n    } else {\r\n        return [...state, payload]\r\n    }\r\n}\r\n\r\nconst items = createReducer([], {\r\n        [actions.addContact]: addContactReducer,\r\n    [actions.deleteContact]: (state, { payload}) => state.filter(item => item.id !== payload),\r\n    })\r\n\r\n\r\nconst filter = createReducer('', {\r\n    [actions.changeFilter]: (_, {payload}) => payload,\r\n})\r\n\r\nexport default combineReducers({ items, filter });","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\nimport reducer from './reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst persistConfig = {\r\n  key: 'contacts',\r\n    storage,\r\n  blacklist: ['filter'],\r\n}\r\n\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        contacts: persistReducer(persistConfig, reducer),\r\n    },\r\n    middleware,\r\n})\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport { store, persistor } from './redux/store';\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={ persistor}>\r\n         <App />\r\n      </PersistGate>  \r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3beOr\",\"label\":\"ContactForm_label__1z9p9\",\"input\":\"ContactForm_input__3KQ05\",\"btn\":\"ContactForm_btn__2eX4U\"};"],"sourceRoot":""}